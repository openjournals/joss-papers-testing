name: Recommend acceptance
on:
  workflow_dispatch:
    inputs:
      repository_url:
        description: 'URL of the repository containing the paper file'
        required: true
      branch:
        description: 'Git branch where the paper Markdown file is'
        required: false
      issue_id:
        description: 'The issue number of the submission'
        required: true
jobs:
  creating-artifacts:
    runs-on: ubuntu-latest
    env:
      GH_ACCESS_TOKEN: ${{ secrets.BOT_TOKEN }}
    steps:
      - name: Compile Paper
        id: generate-files
        uses: xuanxu/paper-action@main
        with:
          repository_url: ${{ github.event.inputs.repository_url }}
          branch: ${{ github.event.inputs.branch }}
          issue_id: ${{ github.event.inputs.issue_id }}
          journal: test_journal
      - name: Upload file to papers repo
        id: upload-pdf
        uses: xuanxu/upload-paper-action@main
        with:
          papers_repo: openjournals/joss-papers-testing
          branch_prefix: joss-testing
          issue_id: ${{ github.event.inputs.issue_id }}
          pdf_path: ${{ steps.generate-files.outputs.pdf_path}}
          bot_token: ${{ secrets.BOT_TOKEN }}
      - name: Upload metadata files
        id: upload-metadata
        uses: xuanxu/upload-metadata-action@main
        with:
          papers_repo: openjournals/joss-papers-testing
          branch_prefix: joss-testing
          issue_id: ${{ github.event.inputs.issue_id }}
          jats_path: ${{ steps.generate-files.outputs.jats_path}}
          crossref_path: ${{ steps.generate-files.outputs.crossref_path}}
          bot_token: ${{ secrets.BOT_TOKEN }}
      - name: Open Pull Request
        id: open-pr
        uses: xuanxu/deposit-pull-request-action@main
        with:
          papers_repo: openjournals/joss-papers-testing
          papers_repo_main_branch: master
          branch_prefix: joss-testing
          issue_id: ${{ github.event.inputs.issue_id }}
          bot_token: ${{ secrets.BOT_TOKEN }}
          mode: dry-run
      - name: Reply message
        if: ${{ success() }}
        run: |
          gh issue comment ${{ github.event.inputs.issue_id }} --body ":wave: this paper is ready to be accepted and published.
          Check final proof :point_right: ${{ steps.open-pr.outputs.pr_url}}
          If the paper PDF and the deposit XML files look good in ${{ steps.open-pr.outputs.pr_url}}, then you can now move forward with accepting the submission by compiling again with the command \`@botsci publish paper\`"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          GH_REPO: openjournals/joss-reviews-testing
      - name: Error message
        if: ${{ failure() }}
        run: |
          gh issue comment ${{ github.event.inputs.issue_id }} --body ":warning: Couldn't prepare acceptance. [An error happened](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}?check_suite_focus=true)."
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          GH_REPO: openjournals/joss-reviews-testing
